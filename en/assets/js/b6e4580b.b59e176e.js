"use strict";(self.webpackChunkchaosblade=self.webpackChunkchaosblade||[]).push([[8375],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),h=l,m=p["".concat(s,".").concat(h)]||p[h]||u[h]||o;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},793:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return d}});var a=n(7462),l=(n(7294),n(3905));const o={title:"Tool ChaosBlade Install And Uninstall"},r=void 0,i={unversionedId:"getting-started/installation-and-deployment/tool-chaosblade-install-and-uninstall",id:"version-1.7.0/getting-started/installation-and-deployment/tool-chaosblade-install-and-uninstall",title:"Tool ChaosBlade Install And Uninstall",description:"This document describes how to install the Chaos Engineering tool : ChaosBlade",source:"@site/versioned_docs/version-1.7.0/getting-started/installation-and-deployment/tool-chaosblade-install-and-uninstall.md",sourceDirName:"getting-started/installation-and-deployment",slug:"/getting-started/installation-and-deployment/tool-chaosblade-install-and-uninstall",permalink:"/en/docs/getting-started/installation-and-deployment/tool-chaosblade-install-and-uninstall",draft:!1,editUrl:"https://github.com/chaosblade-io/chaosblade-website/edit/master/versioned_docs/version-1.7.0/getting-started/installation-and-deployment/tool-chaosblade-install-and-uninstall.md",tags:[],version:"1.7.0",frontMatter:{title:"Tool ChaosBlade Install And Uninstall"},sidebar:"version-1.7.0/docs",previous:{title:"Platform Box Install And Uninstall",permalink:"/en/docs/getting-started/installation-and-deployment/platform-box-install-and-uninstall"},next:{title:"Agent Install",permalink:"/en/docs/getting-started/installation-and-deployment/agent-install"}},s={},d=[{value:"Install on a host",id:"install-on-a-host",level:2},{value:"Install and download the command line toolkit",id:"install-and-download-the-command-line-toolkit",level:3},{value:"Verify installation",id:"verify-installation",level:3},{value:"Uninstallation and Installation",id:"uninstallation-and-installation",level:3},{value:"Installation in Kubernetes Environment",id:"installation-in-kubernetes-environment",level:2},{value:"Environment Preparation",id:"environment-preparation",level:3},{value:"Install with Helm",id:"install-with-helm",level:3},{value:"First, download the Box Chart package",id:"first-download-the-box-chart-package",level:4},{value:"Second\uff0cPerforming the installation",id:"secondperforming-the-installation",level:4},{value:"Verify installation",id:"verify-installation-1",level:3},{value:"Uninstall ChaosBlade",id:"uninstall-chaosblade",level:3}],c={toc:d};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This document describes how to install the Chaos Engineering tool : ChaosBlade"),(0,l.kt)("h2",{id:"install-on-a-host"},"Install on a host"),(0,l.kt)("h3",{id:"install-and-download-the-command-line-toolkit"},"Install and download the command line toolkit"),(0,l.kt)("p",null,"ChaosBlade is an end - side command line tool that supports cli commands. So in a host environment, you just need to add ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/chaosblade-io/chaosblade/releases"},"Chaosblade Releases")," The binary package can be downloaded to the corresponding folder and decompressed. As ",(0,l.kt)("inlineCode",{parentName:"p"},"1.17.0 amd64"),"example\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# 1. download tar\nwget https://github.com/chaosblade-io/chaosblade/releases/download/v1.7.0/chaosblade-1.7.0-linux-amd64.tar.gz\n\n# 2. unzip and entry chaosblade directory\ntar -xvf chaosblade-1.7.0-linux-amd64.tar.gz && cd chaosblade-1.7.0/\n")),(0,l.kt)("h3",{id:"verify-installation"},"Verify installation"),(0,l.kt)("p",null,"To check whether the installation is successful, run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./blade v\n")),(0,l.kt)("p",null,"Here is the expected output\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"version: 1.7.0\nenv: #1 SMP Thu Mar 17 17:08:06 UTC 2022 x86_64\nbuild-time: Tue Sep  6 07:06:55 UTC 2022\n")),(0,l.kt)("h3",{id:"uninstallation-and-installation"},"Uninstallation and Installation"),(0,l.kt)("p",null,"You only need to delete the downloaded and decompressed toolkit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"rm -rf chaosblade-1.7.0*\n")),(0,l.kt)("h2",{id:"installation-in-kubernetes-environment"},"Installation in Kubernetes Environment"),(0,l.kt)("h3",{id:"environment-preparation"},"Environment Preparation"),(0,l.kt)("p",null,"For details, see \uff1a","[Prepare the Kubernetes installation  environment]","(/en/docs/getting-started/installation-and-deployment/environment-prepare/#Prepare the kubernetes installation environment)"),(0,l.kt)("h3",{id:"install-with-helm"},"Install with Helm"),(0,l.kt)("h4",{id:"first-download-the-box-chart-package"},"First, download the Box Chart package"),(0,l.kt)("p",null,"See all available for download ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/chaosblade-io/chaosblade/releases"},"chaosblade-release"),"\uff0cDownload to local\uff0cas ",(0,l.kt)("inlineCode",{parentName:"p"},"1.7.0 amd64"),"example\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://github.com/chaosblade-io/chaosblade/releases/download/v1.7.0/chaosblade-operator-1.7.0.tgz\n")),(0,l.kt)("h4",{id:"secondperforming-the-installation"},"Second\uff0cPerforming the installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm install chaosblade-operator chaosblade-operator-1.7.0.tgz --namespace chaosblade\n")),(0,l.kt)("h3",{id:"verify-installation-1"},"Verify installation"),(0,l.kt)("p",null,"To see how the Box is running, run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get po -n chaosblade\n")),(0,l.kt)("p",null,"Here is the expected output"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"NAME                                    READY   STATUS    RESTARTS   AGE\nchaosblade-operator-688568959-lcwgb     1/1     Running   0          6s\nchaosblade-tool-c9xjd                   1/1     Running   0          6s\nchaosblade-tool-hvqcv                   1/1     Running   0          6s\nchaosblade-tool-q8jjd                   1/1     Running   0          6s\n")),(0,l.kt)("p",null,"If your actual output matches the expected output, ChaosBlade-Box has been installed successfully."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0fAttention\nIf the actual output ",(0,l.kt)("strong",{parentName:"p"},"STATUS")," is not Running, you need to run the following command to view Pod details, and then troubleshoot the problem according to the error message")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# as chaosblade-operator example\nkubectl describe po chaosblade-operator-688568959-lcwgb -n chaosblade\n")),(0,l.kt)("h3",{id:"uninstall-chaosblade"},"Uninstall ChaosBlade"),(0,l.kt)("p",null,"To uninstall ChaosBlade, run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm un chaosblade-operator -n chaosblade\n")),(0,l.kt)("p",null,"After the uninstallation, you can check whether crd resources are also deleted:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get crds | grep chaos\n")),(0,l.kt)("p",null,"If blade crd resource still exists, it can be deleted by the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete crd chaosblades.chaosblade.io\n")),(0,l.kt)("p",null,"If the crd resource fails to be deleted for a long time, run the following command to delete it:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"blades=$(kubectl get blade | grep -v NAME | awk '{print $1}' | tr '\\n' ' ') && kubectl patch blade $blades --type merge -p '{\"metadata\":{\"finalizers\":[]}}'\n")))}u.isMDXComponent=!0}}]);